@using CodeAnalytics.Engine.Contracts.Occurrences
@using CodeAnalytics.Web.Common.Models.Occurrences

@inject NavigationManager NavigationManager

<div class="file">
   <div class="header">
      @RelativePath
   </div>
   <div class="content">
      @foreach (var line in File.LineOccurrences)
      {
         <div class="line" @onclick="() => OnLineClick(line)">
            <div class="number">
               @line.LineNumber
            </div>
            <div class="text">
               <pre><LineOccurrences OccurrenceState="@OccurrenceState" Node="@line" /></pre>
            </div>
         </div>
      }
   </div>
</div>

@code {
   
   [Parameter, EditorRequired]
   public required OccurrenceState OccurrenceState { get; set; }
   
   [Parameter, EditorRequired]
   public required string ProjectPath { get; set; }
   
   [Parameter, EditorRequired]
   public required FileOccurrence File { get; set; }

   private string RelativePath => Path.GetRelativePath(ProjectPath.Replace('\\', '/'), FilePath.Replace('\\', '/'));
   private string FilePath => OccurrenceState.Strings.GetValueOrDefault(File.PathId) ?? "Unknown.Path";

   private void OnLineClick(NodeOccurrence line)
   {
      NavigationManager.NavigateTo($"/source/{FilePath.Replace('\\', '/').TrimStart('/')}?symbol={line.SpanIndex}");
   }

}
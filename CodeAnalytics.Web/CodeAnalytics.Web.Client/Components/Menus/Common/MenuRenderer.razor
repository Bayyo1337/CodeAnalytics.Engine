@using CodeAnalytics.Web.Client.Menus
@using CodeAnalytics.Web.Client.Menus.Interfaces

@implements IDisposable

@inject MenuService MenuService

@foreach (var (menuInfo, index) in MenuService.OpenMenus.Select((m, i) => (m, i)))
{
   menuInfo.Parameters[nameof(IMenuComponent.MenuIndex)] = index;
   menuInfo.Parameters[nameof(IMenuComponent.MenuId)] = menuInfo.Id;
   
   <span @key="@menuInfo.Id">
      <DynamicComponent Type="@menuInfo.ComponentType" Parameters="@menuInfo.Parameters"></DynamicComponent>
   </span>
}

@code {

   private Action? _stateChanged;
   
   protected override void OnInitialized()
   {
      _stateChanged = () => InvokeAsync(StateHasChanged);
      MenuService.OnChange += _stateChanged;
   }
   
   public void Dispose()
   {
      if (_stateChanged is not null)
      {
         MenuService.OnChange -= _stateChanged;
      }
   }
}